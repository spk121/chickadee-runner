name: MinGW basic build-and-test

on:
  # Allow manual triggering
  workflow_dispatch:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: UCRT64,  env: ucrt-x86_64,  thread: --without-threads, jit: --enable-jit=no,  gmp: --enable-mini-gmp }
    runs-on: windows-latest

    name: Build ${{matrix.sys}} ${{matrix.env}} ${{matrix.thread}} ${{matrix.jit}} ${{matrix.gmp}}
    timeout-minutes: 150

    steps:
    - name: Set git to Linux line endings
      run: git config --global core.autocrlf input
    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          autotools
          base-devel
          mingw-w64-${{matrix.env}}-toolchain
          flex
          gperf
          lzip xz
          pkgconf
          mingw-w64-${{matrix.env}}-gettext
          mingw-w64-${{matrix.env}}-gmp
          mingw-w64-${{matrix.env}}-libffi
          mingw-w64-${{matrix.env}}-gc
          mingw-w64-${{matrix.env}}-libiconv
          mingw-w64-${{matrix.env}}-readline
          mingw-w64-${{matrix.env}}-libunistring
          texinfo
    - name: checkout guile
      uses: actions/checkout@v3
      with:
        repository: spk121/guile
        branch: staging
        fetch-depth: 0
        path: guile
    - name: build guile
      run: |
        export LANG=C.UTF-8 TERM=dumb VERBOSE=true TZ=America/Los_Angeles
        mkdir `pwd`/app
        cd guile
        ./autogen.sh
        ./configure CFLAGS="-g -O2 -Wall" ${{matrix.thread}} ${{matrix.jit}} ${{matrix.gmp}} --prefix=`pwd`/../app
         make -j4 V=1
         make install
      shell: msys2 -o igncr '{0}'
    - name: Cache tarballs
      id: cache-tarballs
      uses: actions/cache@v3
      with:
        path: |
          guile-sdl2-0.8.0.tar.gz
          guile-opengl-0.2.0.tar.gz
          chickadee-0.10.0.tar.gz
        key: source-tarballs
    - name: Download tarballs
      if: steps.cache-tarballs.outputs.cache-hit !=  'true'
      run: |
        wget https://files.dthompson.us/guile-sdl2/guile-sdl2-0.8.0.tar.gz
        wget https://ftp.gnu.org/gnu/guile-opengl/guile-opengl-0.2.0.tar.gz
        wget https://files.dthompson.us/chickadee/chickadee-0.10.0.tar.gz
    - name: add env vars for app directory
      run: |
        echo "GUILE_LOAD_PATH=`pwd`/app/share/guile/site/3.0" >> $GITHUB_ENV
        echo "GUILE_LOAD_COMPILED_PATH=`pwd`/app/lib/guile/3.0/site-ccache" >> $GITHUB_ENV
    - name: build guile-sdl2
      run: |
        tar xzvf guile-sdl2-0.8.0.tar.gz
        cd guile-sdl2-0.8.0
        ./configure --prefix=`pwd`/../app
        make
        make install
      shell: msys2 -o igncr '{0}'
    - name: build guile-opengl
      run: |
        tar xzvf guile-opengl-0.2.0.tar.gz
        cd guile-opengl-0.2.0
        ./configure --prefix=`pwd`/../app
        make
        make install
      shell: msys2 -o igncr '{0}'
    - name: build chickadee
      run: |
        tar xzvf chickadee-0.10.0.tar.gz
        cd chickadee-0.10.0
        ./configure --prefix=`pwd`/../app
        make
        make install
      shell: msys2 -o igncr '{0}'
